package com.example.skylink.persistence.Implementations.hsqldb;

import com.example.skylink.objects.Interfaces.iPassengerData;
import com.example.skylink.persistence.Interfaces.iTravellerDB;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

public class TravellerHSQLDB implements iTravellerDB {
    private final String dbPath;

    private final String CREATE_TABLE = "CREATE TABLE IF NOT EXISTS TRAVELLER ("
            + "id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, "
            + "traveller_name VARCHAR(100) NOT NULL, "
            + "seat_number VARCHAR(10) NOT NULL, "
            + "booking_id INT NOT NULL, "
            + "FOREIGN KEY (booking_id) REFERENCES PUBLIC.FLIGHTBOOKINGS (id)"
            + ")";

    public TravellerHSQLDB(String dbPath){
        this.dbPath = dbPath;
    }
    private Connection connect() throws SQLException {
        return DriverManager.getConnection("jdbc:hsqldb:file:" + dbPath + ";shutdown=true", "SA", "");
    }

    public void insertIntoTravellers(String bookingNumber, iPassengerData passenger, String seatNumber) {
        String sql = "INSERT INTO TRAVELLER (traveller_name, seat_number, bookingNumber) VALUES (?, ?, ?)";

        try (Connection conn = connect();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            String travellerName = passenger.getFirstName() + " " + passenger.getLastName();
            ps.setString(1, travellerName);
            ps.setString(2, seatNumber);
            ps.setString(3, bookingNumber);
            ps.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public iTravellerDB initialize() {
        try (Connection conn = connect();
             Statement stmt = conn.createStatement()) {

            stmt.executeUpdate(CREATE_TABLE);

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return this;
    }

    public iTravellerDB drop() {
        String sql = "DROP TABLE TRAVELLER";
        try (Connection conn = connect();
             Statement stmt = conn.createStatement()) {
            stmt.executeUpdate(sql);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return this;
    }

}
